name: Build and Deploy Bribery

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '18.x'
  REMOTE_API_PATH: '/var/www/bribery-api'
  REMOTE_WEB_PATH: '/var/www/bribery-client'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore .NET dependencies
        run: dotnet restore

      - name: Run backend tests
        run: dotnet test --configuration Release

      - name: Publish backend API
        run: dotnet publish src/Bribery.Api/Bribery.Api.csproj -c Release -o deployment/api

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/bribery-client/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend/bribery-client
        run: npm ci

      - name: Run frontend tests
        working-directory: frontend/bribery-client
        run: npm test -- --watch=false --browsers=ChromeHeadlessNoSandbox

      - name: Build frontend for production
        working-directory: frontend/bribery-client
        run: npm run build -- --configuration production

      - name: Prepare deployment bundle
        run: |
          mkdir -p deployment/frontend
          cp -r frontend/bribery-client/dist/bribery-client/browser/. deployment/frontend/
          tar -czf bribery-deploy.tar.gz -C deployment .

      - name: Upload bundle to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          passphrase: ${{ secrets.DEPLOY_SSH_PASSPHRASE }}
          port: ${{ secrets.DEPLOY_PORT || '22' }}
          source: "bribery-deploy.tar.gz"
          target: "/tmp"

      - name: Deploy on remote host
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          passphrase: ${{ secrets.DEPLOY_SSH_PASSPHRASE }}
          port: ${{ secrets.DEPLOY_PORT || '22' }}
          script: |
            set -euo
            mkdir -p /tmp/bribery-deployment
            tar -xzf /tmp/bribery-deploy.tar.gz -C /tmp/bribery-deployment
            sudo mkdir -p "${{ env.REMOTE_API_PATH }}"
            sudo rsync -a --delete /tmp/bribery-deployment/api/ "${{ env.REMOTE_API_PATH }}/"
            sudo mkdir -p "${{ env.REMOTE_WEB_PATH }}"
            sudo rsync -a --delete /tmp/bribery-deployment/frontend/ "${{ env.REMOTE_WEB_PATH }}/"
            if id -u www-data >/dev/null 2>&1; then
              sudo chown -R www-data:www-data "${{ env.REMOTE_WEB_PATH }}"
            fi
            if sudo systemctl list-unit-files | grep -q '^bribery-api.service'; then
              sudo systemctl restart bribery-api
            else
              echo 'bribery-api.service not found - skipping restart'
            fi
            if sudo systemctl list-unit-files | grep -q '^nginx.service'; then
              sudo systemctl reload nginx
            else
              echo 'nginx.service not found - skipping reload'
            fi
            rm -f /tmp/bribery-deploy.tar.gz
            rm -rf /tmp/bribery-deployment
